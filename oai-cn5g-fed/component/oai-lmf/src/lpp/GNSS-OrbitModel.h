/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "37355-g60.asn"
 * 	`asn1c -no-gen-OER -fcompound-names -no-gen-example -findirect-choice
 * -fno-include-deps -D lpp`
 */

#ifndef _GNSS_OrbitModel_H_
#define _GNSS_OrbitModel_H_

#include <asn_application.h>

/* Including external dependencies */
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum GNSS_OrbitModel_PR {
  GNSS_OrbitModel_PR_NOTHING, /* No components present */
  GNSS_OrbitModel_PR_keplerianSet,
  GNSS_OrbitModel_PR_nav_KeplerianSet,
  GNSS_OrbitModel_PR_cnav_KeplerianSet,
  GNSS_OrbitModel_PR_glonass_ECEF,
  GNSS_OrbitModel_PR_sbas_ECEF,
  /* Extensions may appear below */
  GNSS_OrbitModel_PR_bds_KeplerianSet_r12,
  GNSS_OrbitModel_PR_bds_KeplerianSet2_r16,
  GNSS_OrbitModel_PR_navic_KeplerianSet_r16
} GNSS_OrbitModel_PR;

/* Forward declarations */
struct NavModelKeplerianSet;
struct NavModelNAV_KeplerianSet;
struct NavModelCNAV_KeplerianSet;
struct NavModel_GLONASS_ECEF;
struct NavModel_SBAS_ECEF;
struct NavModel_BDS_KeplerianSet_r12;
struct NavModel_BDS_KeplerianSet2_r16;
struct NavModel_NavIC_KeplerianSet_r16;

/* GNSS-OrbitModel */
typedef struct GNSS_OrbitModel {
  GNSS_OrbitModel_PR present;
  union GNSS_OrbitModel_u {
    struct NavModelKeplerianSet* keplerianSet;
    struct NavModelNAV_KeplerianSet* nav_KeplerianSet;
    struct NavModelCNAV_KeplerianSet* cnav_KeplerianSet;
    struct NavModel_GLONASS_ECEF* glonass_ECEF;
    struct NavModel_SBAS_ECEF* sbas_ECEF;
    /*
     * This type is extensible,
     * possible extensions are below.
     */
    struct NavModel_BDS_KeplerianSet_r12* bds_KeplerianSet_r12;
    struct NavModel_BDS_KeplerianSet2_r16* bds_KeplerianSet2_r16;
    struct NavModel_NavIC_KeplerianSet_r16* navic_KeplerianSet_r16;
  } choice;

  /* Context for parsing across buffer boundaries */
  asn_struct_ctx_t _asn_ctx;
} GNSS_OrbitModel_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_GNSS_OrbitModel;
extern asn_CHOICE_specifics_t asn_SPC_GNSS_OrbitModel_specs_1;
extern asn_TYPE_member_t asn_MBR_GNSS_OrbitModel_1[8];
extern asn_per_constraints_t asn_PER_type_GNSS_OrbitModel_constr_1;

#ifdef __cplusplus
}
#endif

#endif /* _GNSS_OrbitModel_H_ */
#include <asn_internal.h>
