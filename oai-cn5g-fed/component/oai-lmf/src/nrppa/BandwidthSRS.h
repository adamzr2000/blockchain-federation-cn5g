/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NRPPA-IEs"
 * 	found in "38455.asn"
 * 	`asn1c -no-gen-OER -fcompound-names -no-gen-example -findirect-choice
 * -fno-include-deps -D nrppa`
 */

#ifndef _BandwidthSRS_H_
#define _BandwidthSRS_H_

#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum BandwidthSRS_PR {
  BandwidthSRS_PR_NOTHING, /* No components present */
  BandwidthSRS_PR_fR1,
  BandwidthSRS_PR_fR2
  /* Extensions may appear below */

} BandwidthSRS_PR;
typedef enum BandwidthSRS__fR1 {
  BandwidthSRS__fR1_kHz5   = 0,
  BandwidthSRS__fR1_kHz10  = 1,
  BandwidthSRS__fR1_kHz20  = 2,
  BandwidthSRS__fR1_kHz40  = 3,
  BandwidthSRS__fR1_kHz50  = 4,
  BandwidthSRS__fR1_kHz80  = 5,
  BandwidthSRS__fR1_kHz100 = 6
  /*
   * Enumeration is extensible
   */
} e_BandwidthSRS__fR1;
typedef enum BandwidthSRS__fR2 {
  BandwidthSRS__fR2_kHz50  = 0,
  BandwidthSRS__fR2_kHz100 = 1,
  BandwidthSRS__fR2_kHz200 = 2,
  BandwidthSRS__fR2_kHz400 = 3
  /*
   * Enumeration is extensible
   */
} e_BandwidthSRS__fR2;

/* BandwidthSRS */
typedef struct BandwidthSRS {
  BandwidthSRS_PR present;
  union BandwidthSRS_u {
    long fR1;
    long fR2;
    /*
     * This type is extensible,
     * possible extensions are below.
     */
  } choice;

  /* Context for parsing across buffer boundaries */
  asn_struct_ctx_t _asn_ctx;
} BandwidthSRS_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_fR1_2;	// (Use -fall-defs-global to
 * expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_fR2_11;	// (Use -fall-defs-global to
 * expose) */
extern asn_TYPE_descriptor_t asn_DEF_BandwidthSRS;
extern asn_CHOICE_specifics_t asn_SPC_BandwidthSRS_specs_1;
extern asn_TYPE_member_t asn_MBR_BandwidthSRS_1[2];
extern asn_per_constraints_t asn_PER_type_BandwidthSRS_constr_1;

#ifdef __cplusplus
}
#endif

#endif /* _BandwidthSRS_H_ */
#include <asn_internal.h>
