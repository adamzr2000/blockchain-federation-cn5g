/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "NRPPA-IEs"
 * 	found in "38455.asn"
 * 	`asn1c -no-gen-OER -fcompound-names -no-gen-example -findirect-choice
 * -fno-include-deps -D nrppa`
 */

#ifndef _MeasurementQuantitiesValue_H_
#define _MeasurementQuantitiesValue_H_

#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MeasurementQuantitiesValue {
  MeasurementQuantitiesValue_cell_ID            = 0,
  MeasurementQuantitiesValue_angleOfArrival     = 1,
  MeasurementQuantitiesValue_timingAdvanceType1 = 2,
  MeasurementQuantitiesValue_timingAdvanceType2 = 3,
  MeasurementQuantitiesValue_rSRP               = 4,
  MeasurementQuantitiesValue_rSRQ               = 5,
  /*
   * Enumeration is extensible
   */
  MeasurementQuantitiesValue_sS_RSRP          = 6,
  MeasurementQuantitiesValue_sS_RSRQ          = 7,
  MeasurementQuantitiesValue_cSI_RSRP         = 8,
  MeasurementQuantitiesValue_cSI_RSRQ         = 9,
  MeasurementQuantitiesValue_angleOfArrivalNR = 10
} e_MeasurementQuantitiesValue;

/* MeasurementQuantitiesValue */
typedef long MeasurementQuantitiesValue_t;

/* Implementation */
extern asn_per_constraints_t asn_PER_type_MeasurementQuantitiesValue_constr_1;
extern asn_TYPE_descriptor_t asn_DEF_MeasurementQuantitiesValue;
extern const asn_INTEGER_specifics_t asn_SPC_MeasurementQuantitiesValue_specs_1;
asn_struct_free_f MeasurementQuantitiesValue_free;
asn_struct_print_f MeasurementQuantitiesValue_print;
asn_constr_check_f MeasurementQuantitiesValue_constraint;
ber_type_decoder_f MeasurementQuantitiesValue_decode_ber;
der_type_encoder_f MeasurementQuantitiesValue_encode_der;
xer_type_decoder_f MeasurementQuantitiesValue_decode_xer;
xer_type_encoder_f MeasurementQuantitiesValue_encode_xer;
per_type_decoder_f MeasurementQuantitiesValue_decode_uper;
per_type_encoder_f MeasurementQuantitiesValue_encode_uper;
per_type_decoder_f MeasurementQuantitiesValue_decode_aper;
per_type_encoder_f MeasurementQuantitiesValue_encode_aper;

#ifdef __cplusplus
}
#endif

#endif /* _MeasurementQuantitiesValue_H_ */
#include <asn_internal.h>
