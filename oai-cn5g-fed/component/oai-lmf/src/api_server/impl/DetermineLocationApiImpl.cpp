/**
 * LMF Location
 * LMF Location Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA,
 * ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "DetermineLocationApiImpl.h"
#include "lmf_config.hpp"
#include "logger.hpp"

extern oai::lmf::config::lmf_config lmf_cfg;

namespace oai::lmf::api {

using namespace oai::model::lmf;

DetermineLocationApiImpl::DetermineLocationApiImpl(
    const std::shared_ptr<Pistache::Rest::Router>& rtr,
    oai::lmf::app::lmf_app* lmf_app_inst)
    : DetermineLocationApi(rtr), m_lmf_app(lmf_app_inst) {}

void DetermineLocationApiImpl::determine_location(
    const InputData& inputData, Pistache::Http::ResponseWriter& response) {
  Logger::lmf_server().info(
      "Get Determine Location %s\n", nlohmann::basic_json(inputData).dump());
  nlohmann::json json_data;
  Pistache::Http::Code code;
  m_lmf_app->handle_determine_location(inputData, json_data, code);
  if (code == Pistache::Http::Code::Ok) {
    response.send(Pistache::Http::Code::Ok, json_data.dump());
  } else {
    response.send(code, json_data.dump());
  }
}

}  // namespace oai::lmf::api
