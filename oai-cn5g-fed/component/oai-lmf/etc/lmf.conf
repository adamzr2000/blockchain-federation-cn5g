## LMF configuration file
LMF =
{
  INSTANCE_ID = {{ env["INSTANCE_ID"] if "INSTANCE_ID" in env.keys() else '0' }};
  PID_DIRECTORY = "{{ env ["PID_DIR"] if "PID_DIR" in env.keys() else '/var/run' }}";
  LMF_NAME = "{{ env["LMF_NAME"] }}";
  LOG_LEVEL = "{{ env["LOG_LEVEL"] if "LOG_LEVEL" in env.keys() else 'debug' }}";
  HTTP_THREADS_COUNT =  {{ env["HTTP_THREADS_COUNT"] if "HTTP_THREADS_COUNT" in env.keys() else '8' }};
  GNB_ID_BITS_COUNT = {{ env["GNB_ID_BITS_COUNT"] if "GNB_ID_BITS_COUNT" in env.keys() else '28' }};
  NUM_GNB = {{ env["NUM_GNB"] if "NUM_GNB" in env.keys() else '1' }};
  TRP_INFO_WAIT_MS = {{ env["TRP_INFO_WAIT_MS"] if "TRP_INFO_WAIT_MS" in env.keys() else '10000' }};
  POSITIONING_WAIT_MS = {{ env["POSITIONING_WAIT_MS"] if "POSITIONING_WAIT_MS" in env.keys() else '10000' }};
  MEASUREMENT_WAIT_MS =  {{ env["MEASUREMENT_WAIT_MS"] if "MEASUREMENT_WAIT_MS" in env.keys() else '10000' }};

  INTERFACES:{
    # LMF binded interface for SBI interface (e.g., communication with AMF, UDM)
    SBI:{
        INTERFACE_NAME = "{{ env["SBI_IF_NAME"] }}";
        IPV4_ADDRESS   = "read";
        # YOUR NETWORK CONFIG HERE (default: 80)
        PORT           = {{ env["SBI_PORT"] if "SBI_PORT" in env.keys() else '80' }};
        # YOUR API VERSION FOR LMF CONFIG HERE (default: v1)
        API_VERSION    = "{{ env["SBI_API_VERSION"] if "SBI_API_VERSION" in env.keys() else 'v1' }}";
        # YOUR NETWORK CONFIG HERE (default: 8080)
        HTTP2_PORT     = {{ env["SBI_HTTP2_PORT"] if "SBI_HTTP2_PORT" in env.keys() else '8080' }};
    };
  };

  # SUPPORT FEATURES
  SUPPORT_FEATURES:{
    # STRING, {"yes", "no"},
    # Set to yes if AULMFSF will relying on a DNS to resolve AMF's FQDN
    USE_FQDN_DNS = "{{ env["USE_FQDN_DNS"] if "USE_FQDN_DNS" in env.keys() else 'no' }}";
    # Set to yes to enable HTTP2 for AMF server
    USE_HTTP2    = "{{ env["USE_HTTP2"] if "USE_HTTP2" in env.keys() else 'no' }}";
    # Set to 'yes' if LMF resgisters to an NRF
    REGISTER_NRF = "{{ env["REGISTER_NRF"] if "REGISTER_NRF" in env.keys() else 'no' }}";
    REQUEST_TRP_INFO = "{{ env["REQUEST_TRP_INFO"] if "REQUEST_TRP_INFO" in env.keys() else 'yes' }}";
    DETERMINE_NUM_GNB = "{{ env["DETERMINE_NUM_GNB"] if "DETERMINE_NUM_GNB" in env.keys() else 'no' }}";
  }  

  AMF:{
    {%- if env["AMF_HOSTNAME"] is defined %}
    IPV4_ADDRESS   = "{{ resolve(env["AMF_HOSTNAME"]) }}";
    {%- else %}
    IPV4_ADDRESS   = "{{ env["AMF_IP_ADDRESS"] if "AMF_IP_ADDRESS" in env.keys() else '0.0.0.0' }}";
    {%- endif %}
    # YOUR NETWORK CONFIG HERE  (default: 80)
    PORT           = {{ env["AMF_PORT"] if "AMF_PORT" in env.keys() else '80' }};
    # YOUR API VERSION FOR AMF CONFIG HERE
    API_VERSION    = "{{ env["AMF_VERSION_NB"] if "AMF_VERSION_NB" in env.keys() else 'v1' }}";
    # YOUR AMF FQDN CONFIG HERE
    FQDN           = "{{ env["AMF_FQDN"] if "AMF_FQDN" in env.keys() else 'localhost' }}"
  };
  
  NRF :
  {
    {%- if env["NRF_HOSTNAME"] is defined %}
    IPV4_ADDRESS   = "{{ resolve(env["NRF_HOSTNAME"]) }}";
    {%- else %}
    IPV4_ADDRESS   = "{{ env["NRF_IPV4_ADDRESS"] if "NRF_IPV4_ADDRESS" in env.keys() else '0.0.0.0' }}";
    {%- endif %}
    # YOUR NRF CONFIG HERE (default: 80)
    PORT           = {{ env["NRF_PORT"] if "NRF_PORT" in env.keys() else '80' }};
    # YOUR NRF API VERSION HERE
    API_VERSION    = "{{ env["NRF_API_VERSION"] if "NRF_API_VERSION" in env.keys() else 'v1' }}";
    FQDN           = "{{ env["NRF_FQDN"] if "NRF_FQDN" in env.keys() else 'localhost' }}";
  };
};
